{
  "root": true,
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "eslint-plugin-jsdoc",
    "@typescript-eslint"
  ],
  "env": {
    "node": true,
    "mocha": true
  },
  "settings": {
    "react": {
      "version": "999.999.999"
    }
  },
  "rules": {
    "@typescript-eslint/ban-ts-comment": "off",
    "dot-notation": "off",
    "implicit-arrow-linebreak": "off",
    "no-restricted-syntax": [
      "off",
      "BinaryExpression[operator='of']"
    ],
    "object-curly-newline": 0,
    "semi": [
      2,
      "never"
    ],
    "func-names": 0,
    "no-param-reassign": "off",
    "no-prototype-builtins": "off",
    "radix": "off",
    "no-console": "off",
    "indent": [
      "error",
      2
    ],
    "require-jsdoc": "off",
    "valid-jsdoc": [
      "error",
      {
        "prefer": {
          "arg": "param",
          "return": "returns"
        },
        "preferType": {
          "Boolean": "boolean",
          "Number": "number",
          "String": "string",
          "object": "Object",
          "array": "Array",
          "date": "Date",
          "regexp": "RegExp",
          "Regexp": "RegExp",
          "promise": "Promise"
        },
        "requireReturn": true,
        "requireParamDescription": false,
        "requireReturnDescription": false
      }
    ],
    "jsdoc/check-param-names": "error",
    "jsdoc/check-tag-names": "error",
    "jsdoc/check-types": "off",
    "jsdoc/require-description-complete-sentence": "off",
    "jsdoc/require-example": "off",
    "jsdoc/require-hyphen-before-param-description": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "off",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-param-type": "error",
    "jsdoc/require-returns-description": "off",
    "jsdoc/require-returns-type": "error",
    "generator-star-spacing": "off",
    "import/no-extraneous-dependencies": "off",
    "import/newline-after-import": "off",
    "import/no-unresolved": [
      "error",
      {
        "ignore": [
          "^ava$"
        ]
      }
    ],
    "class-methods-use-this": "off",
    "no-return-await": "off",
    "no-warning-comments": "off",
    // note you must disable the base rule as it can report incorrect errors
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn", // or "error"
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "no-useless-escape": "off",
    "spaced-comment": "off",
    "require-yield": "off",
    "prefer-template": "warn",
    "prefer-promise-reject-errors": "off",
    "no-underscore-dangle": "off",
    "comma-dangle": [
      "error",
      "only-multiline"
    ],
    "object-shorthand": "off",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "max-len": [
      "error",
      {
        "code": 100,
        "ignorePattern": "(https?:|JSON\\.parse|[Uu]rl =)"
      }
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    "prefer-destructuring": "off",
    "function-paren-newline": [
      "error",
      "consistent"
    ],
    "import/extensions": "off"
  },
  "overrides": [
    {
      "files": [
        "test-*.js"
      ],
      "rules": {
        "max-len": [
          "error",
          {
            "code": 100,
            "ignorePattern": "(https?:|JSON\\.parse|[Uu]rl =)",
            "ignoreStrings": true
          }
        ]
      }
    },
    {
      "files": [
        "*.js"
      ],
      "rules": {
        "@typescript-eslint/no-var-requires": 0
      }
    }
  ]
}
